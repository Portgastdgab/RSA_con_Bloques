#include "../Functions/BigMath.h"

typedef long long int ll;

class RSA {

private:
    ZZ d = conv <ZZ> ("84439304348414665611062476311080930144638608403616391631676401265068714323500010645564485534957770174022091748061766327733355497989715627589381512323199604634265991576905743307023083523329895075580816087851586475753664627060867333266078406772346699055042343351863529514585609918919645238904852440069226433529");
    ZZ p = conv <ZZ> ("11213828783257636674220619211377018571334306362767092051455961583173293684360516333034386990018305155441663873340171989914065928643044014241712713006842941");
    ZZ q = conv <ZZ> ("12960833193832585510080816961698826807968502933592875738476118603220479045243111181469588479528358901325659212957956874242395825819989046449424749694008263");
    ZZ phi = conv <ZZ> ("145340564324000851435440235342903157685109161872683322070012496608168152719080749809343059587795054621731096121935437799795559640731720743481603975294782121774418239655607053314993278869267374008545240341156197504516779296728296226647343138357879528964055867763630718918297218787589929038951449105922896370280");
    int bits;

    void keysGenerator(int);

    void info();

    string alphabet = "abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890,.";


public:
    ZZ e = conv <ZZ> ("128195304028343879037399917894914264997068481115663236939522394127592836594185591909956481711501392672032626296953751011637171777925869334723258705998608075594600053562867823545540962940032165059641080315846813847590864593402663752476893497592651092698460241666388908714562040889782362316882221574089498984049");
    ZZ n = conv <ZZ> ("145340564324000851435440235342903157685109161872683322070012496608168152719080749809343059587795054621731096121935437799795559640731720743481603975294782145949080216745829237616429451945112753311354536701123987436596965690501025830274857642333349075628112635086717017047161375249344392072012140243385597221483");
    string message;
    string crypted_letter;

    RSA();

    RSA(int);

    RSA(ZZ _e, ZZ _d, ZZ _n); //e,d,n
    RSA(ZZ _e, ZZ n_);

    ~RSA();

    void cipher(string);            //Cifra el mensaje, el cifrado se almacena en el atributo crypted_letter

    void decipher(string);          //Descifrar el mensaje, el descifrado se almacena en el atributo message

    void show_encryption();         //muestra el atributo crypted_letter

    void show_decryption();         //muestra el atributo message


};
